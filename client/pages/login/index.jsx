import Head from "next/head";
import { useForm } from "react-hook-form";
import Navbar from "../../components/shared/Navbar";
import Topbar from "../../components/shared/Topbar";
import { AuthBox, Container } from "../../components/styles/Container.styled";
import { FlexCenter } from "../../components/styles/Flex.styled";
import ButtonInput from "../../components/UI/ButtonInput";
import TextInput from "../../components/UI/TextInput";
import { BsArrowRight } from 'react-icons/bs';
import styled from "styled-components";
import { Error } from "../../components/UI/Error";

import {AuthBackEndApi} from "../../api/api";
import {useStoreActions, useStoreState} from "easy-peasy";
import {useRouter} from "next/router";


const Login = () => {
    const router = useRouter()

    const {
        register,
        handleSubmit,
        formState: { errors }
    } = useForm();

   const {LogIn} = useStoreActions(actions => actions.Auth);

    const onSubmit = async (data) => {
        await LogIn(data) && router.push('/');

    };


    return (
        <>
            <Head>
                <title>Login</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Topbar></Topbar>
            <Container>
                <Navbar></Navbar>

                <FlexCenter>

                    <AuthBox onSubmit={handleSubmit(onSubmit)}>
                        <TextInput {...register("email", { required: "Email or UserName is Required." })} placeholder="Email" type="text"/>
                        {errors.email && <Error>Email or UserName is required</Error>}
                        
                        <TextInput {...register("password", { required: "Password is Required." })} placeholder="Password" type="password"/>
                        {errors.password && <Error>Password is required</Error>}

                        <ButtonInput type="submit"  value={`Sign In`}/>

                    </AuthBox>

                </FlexCenter>

            </Container>

        </>
    );
};

export default Login;