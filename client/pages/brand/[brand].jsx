import {useQuery} from '@tanstack/react-query';
import Head from 'next/head';
import {useRouter} from 'next/router';
import {getBrands} from '../../api/home';
import {getBrandProducts} from '../../api/singleBrandProducts';
import SingleCategory from '../../components/category/category';
import Footer from '../../components/shared/footer/footer';
import Navbar from '../../components/shared/navbar';
import LoadingSkeleton from '../../components/shared/skeleton';
import Topbar from '../../components/shared/topbar';
import {Container} from '../../components/styles/Container.styled';

const SingleBrandProducts = ({ProductsByBrand}) => {
  const route = useRouter ();

  const brandName = route.query.brand;

  // data:Products will be used in the page to render product list
  const {data: Products, isLoading} = useQuery ({
    queryKey: ['ProductByBrand', brandName],
    queryFn: () => getBrandProducts (brandName),
    initialData: ProductsByBrand,
  });

  if (isLoading) {
    return <LoadingSkeleton />;
  }

  return (
    <div>
      <Head>
        <title>Category Products</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Topbar />
      <Container>
        <Navbar />
        {/* <SingleCategory
          products={Products}
          heading="Category filter Products"
        /> */}

      </Container>
      <Footer />
    </div>
  );
};

export default SingleBrandProducts;

export const getStaticProps = async ({params}) => {
  const brandName = params.brand;
  const ProductsByBrand = await getBrandProducts (brandName);
  return {
    props: {ProductsByBrand}, // will be passed to the page component as props
  };
};

export const getStaticPaths = async ({}) => {
  const Brands = await getBrands ();
  const paths = Brands.map (brand => ({
    params: {brand: brand.attributes.name},
  }));
  return {
    paths,
    fallback: false,
  };
};
