import { useStoreActions } from "easy-peasy";
import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import { useForm } from "react-hook-form";
import { toast } from "react-toastify";
import Navbar from "../../components/shared/navbar";
import Topbar from "../../components/shared/topbar";
import { AuthBox, Container } from "../../components/styles/Container.styled";
import { FlexCenter } from "../../components/styles/Flex.styled";
import ButtonInput from "../../components/UI/ButtonInput";
import { Error } from "../../components/UI/Error";
import TextInput from "../../components/UI/TextInput";

const Register = () => {
  const router = useRouter();
  const { Register } = useStoreActions((actions) => actions.Auth);

  const {
    register,
    handleSubmit,
    watch,
    formState: { errors },
  } = useForm();

  const onSubmit = async (data) => {
    if (data.password !== data.confirmPassword) {
       toast('Password does Not Match')
    } else {
      (await Register(data)) && router.push("/");
    }
  };

  return (
    <>
      <Head>
        <title>Register</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Topbar/>
      <Container>
        <Navbar />

        <FlexCenter>
          <AuthBox onSubmit={handleSubmit(onSubmit)}>
          <TextInput
              {...register("name", { required: "Name is Required." })}
              placeholder="Name"
              type="text"
            />
            {errors.name && <Error>Name is required</Error>}

            <TextInput
              {...register("email", { required: "Email is Required." })}
              placeholder="Email"
              type="email"
            />
            {errors.email && <Error>Email is required</Error>}

            <TextInput
              {...register("phone", { required: "Phone is Required." })}
              placeholder="Phone"
              type="text"
            />
            {errors.phone && <Error>Phone is required</Error>}

            <TextInput
              {...register("password", { required: "Password is Required." })}
              placeholder="Password"
              type="password"
            />
            {errors.password && <Error>Password is required</Error>}

            <TextInput
              {...register("confirmPassword", {
                required: "Confirm Password is Required.",
              })}
              placeholder="Confirm Password"
              type="password"
            />
            {errors.confirmPassword && <Error>Confirm Password is required</Error>}

            <ButtonInput type="submit" value={`REGISTER`} />

            <FlexCenter>
              <p style={{ fontSize: "16px" }}>Already have an account?</p>
              <Link href="/login">
                <a style={{ fontSize: "16px", marginLeft: "5px" }}>Login</a>
              </Link>
            </FlexCenter>
          </AuthBox>
        </FlexCenter>
      </Container>
    </>
  );
};

export default Register;
